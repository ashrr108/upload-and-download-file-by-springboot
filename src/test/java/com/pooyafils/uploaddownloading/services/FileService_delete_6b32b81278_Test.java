// Test generated by RoostGPT for test java-sping-test2 using AI Type Vertex AI and AI Model text-bison

package com.pooyafils.uploaddownloading.services;

import com.pooyafils.uploaddownloading.domain.MyFile;
import com.pooyafils.uploaddownloading.repository.MyFileRepository;
import org.apache.commons.io.IOUtils;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.mock.web.MockMultipartFile;
import org.springframework.test.context.junit.jupiter.SpringExtension;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

@ExtendWith(MockitoExtension.class)
@SpringBootTest
public class FileService_delete_6b32b81278_Test {

    @Mock
    private MyFileRepository repository;

    @InjectMocks
    private FileService fileService;

    @Value("${upload.path}")
    private String uploadPath;

    @Test
    public void testDelete_whenFileExists_thenFileIsDeleted() throws IOException {
        // given
        int id = 1;
        MyFile myFile = new MyFile();
        myFile.setId(id);
        myFile.setName("test.txt");
        myFile.setSize(100L);
        when(repository.findById(id)).thenReturn(myFile);

        // when
        fileService.delete(id);

        // then
        Path path = Paths.get(uploadPath + myFile.getName());
        assertEquals(false, Files.exists(path));
    }

    @Test
    public void testDelete_whenFileDoesNotExist_thenNoExceptionIsThrown() {
        // given
        int id = 1;
        when(repository.findById(id)).thenReturn(null);

        // when
        fileService.delete(id);

        // then
        // no exception is thrown
    }
}
