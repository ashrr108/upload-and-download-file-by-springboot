// Test generated by RoostGPT for test java-sping-test2 using AI Type Open AI and AI Model gpt-4

package com.pooyafils.uploaddownloading.services;

import com.pooyafils.uploaddownloading.domain.MyFile;
import com.pooyafils.uploaddownloading.repository.MyFileRepository;
import org.apache.commons.io.IOUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;

import static org.mockito.Mockito.*;

class FileService_downloaderImage_c22ee902f3_Test {
    @InjectMocks
    FileService fileService;
    
    @Mock
    FileInputStream fileInputStream;
    
    @Value("${file.upload-dir}")
    private String path;
    
    @BeforeEach
    void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    void testDownloaderImage_success() throws Exception {
        String imageName = "testImage.jpg";
        InputStream in = new FileInputStream(path + imageName);
        when(fileInputStream.read()).thenReturn(IOUtils.toByteArray(in));
        byte[] result = fileService.downloaderImage(imageName);
        Assertions.assertArrayEquals(IOUtils.toByteArray(in), result);
    }

    @Test
    void testDownloaderImage_fileNotFound() throws Exception {
        String imageName = "wrongImage.jpg";
        InputStream in = new FileInputStream(path + imageName);
        when(fileInputStream.read()).thenThrow(new IOException());
        Assertions.assertThrows(IOException.class, () -> fileService.downloaderImage(imageName));
    }
}
